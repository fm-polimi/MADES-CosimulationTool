;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; variables 
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(defvar history
	(&&
(&& (!! (-P- ACT1))(-P- COND1)(-P- REACT1))
(futr (&& (!! (-P- ACT1))(-P- COND1)(-P- REACT1)) 1)
(futr (&& (!! (-P- ACT1))(-P- COND1)(-P- REACT1)) 2)
(futr (&& (!! (-P- ACT1))(-P- COND1)(-P- REACT1)) 3)
(futr (&& (!! (-P- ACT1))(-P- COND1)(-P- REACT1)) 4)
(futr (&& (!! (-P- ACT1))(-P- COND1)(!! (-P- REACT1))) 5)
(futr (&& (!! (-P- ACT1))(-P- COND1)(-P- REACT1)) 6)
))

(defvar constraints
(&&
	history
))
